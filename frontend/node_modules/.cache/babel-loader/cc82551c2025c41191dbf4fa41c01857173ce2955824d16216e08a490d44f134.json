{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\components\\\\Widgets\\\\StandingsWidget.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Widgets/StandingsWidget.js\nimport React, { useEffect, useRef } from \"react\";\n\n// ВАЖНО: Ключ API не должен быть захардкожен здесь в продакшене.\n// Для разработки можно временно передать, но лучше через переменные окружения,\n// доступные во время сборки, или через бэкэнд.\n// Поскольку это клиентский виджет, ключ будет виден в HTML.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_SPORTS_KEY = process.env.REACT_APP_API_SPORTS_KEY; // Пример, если ключ доступен через переменные окружения React\n\nfunction StandingsWidget({\n  leagueId,\n  season,\n  teamId = \"\"\n}) {\n  _s();\n  const widgetContainerRef = useRef(null);\n  useEffect(() => {\n    // Проверяем, загружен ли уже скрипт виджетов, чтобы не добавлять его многократно\n    if (document.getElementById(\"api-sports-widgets-script\")) {\n      // Если скрипт уже есть, пытаемся инициализировать виджеты (если виджеты это поддерживают)\n      // Для данного типа виджета, он обычно сам рендерится при наличии div с атрибутами.\n      // Но если бы была JS инициализация, она была бы здесь.\n      if (window.widgets) {\n        // window.widgets.load(); // Пример, если бы такая функция существовала\n      }\n      return;\n    }\n\n    // Создаем и добавляем скрипт виджетов в DOM\n    const script = document.createElement(\"script\");\n    script.id = \"api-sports-widgets-script\";\n    script.src = \"https://widgets.api-sports.io/2.0.3/widgets.js\";\n    script.type = \"module\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    // Очистка при размонтировании компонента\n    return () => {\n      // По-хорошему, нужно найти способ \"уничтожить\" виджет или его контейнер,\n      // чтобы избежать утечек памяти или дублирования при частой смене параметров.\n      // Но сам виджет может не предоставлять такого API.\n      // Простое удаление скрипта не всегда эффективно, если он уже выполнился.\n      // Если виджет рендерится в widgetContainerRef, можно попробовать его очистить:\n      if (widgetContainerRef.current) {\n        // widgetContainerRef.current.innerHTML = ''; // Это грубый способ\n      }\n    };\n  }, []); // Загружаем скрипт один раз при монтировании компонента\n\n  // Если ключ API не предоставлен, показываем сообщение\n  // ВАЖНО: Замените на ваш реальный ключ или способ его получения\n  const effectiveApiKey = API_SPORTS_KEY || \"YOUR_FALLBACK_API_KEY_HERE\"; // Заглушка, если process.env не работает\n\n  if (!effectiveApiKey || effectiveApiKey === \"YOUR_FALLBACK_API_KEY_HERE\") {\n    console.error(\"StandingsWidget: API ключ не найден. Укажите REACT_APP_API_SPORTS_KEY в .env файле.\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-brand-text-muted bg-brand-card rounded-lg shadow-md\",\n      children: \"API \\u043A\\u043B\\u044E\\u0447 \\u0434\\u043B\\u044F \\u0442\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u043E\\u0439 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0435\\u043D.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  return (\n    /*#__PURE__*/\n    // Контейнер для виджета. Ключ (key={leagueId + '-' + season}) важен,\n    // чтобы React пересоздавал этот div (и виджет внутри него), когда меняется лига или сезон.\n    // Это заставит виджет перезагрузиться с новыми параметрами.\n    _jsxDEV(\"div\", {\n      // Заставляет React пересоздавать DOM элемент при смене props\n      ref: widgetContainerRef,\n      id: \"wg-api-football-standings\",\n      \"data-host\": \"v3.football.api-sports.io\",\n      \"data-key\": effectiveApiKey // Используем ключ\n      ,\n      \"data-league\": leagueId,\n      \"data-team\": teamId // Если нужно для конкретной команды\n      ,\n      \"data-season\": season,\n      \"data-theme\": \"dark\" // Попробуем темную тему, если виджет ее поддерживает\n      ,\n      \"data-show-errors\": \"true\" // Показываем ошибки для отладки\n      ,\n      \"data-show-logos\": \"true\",\n      className: \"wg_loader\" // Этот класс может использоваться виджетом для показа загрузчика\n    }, `${leagueId}-${season}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(StandingsWidget, \"xSjALKVtHqFc41zXt8WLuP5voOE=\");\n_c = StandingsWidget;\nexport default StandingsWidget;\nvar _c;\n$RefreshReg$(_c, \"StandingsWidget\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","API_SPORTS_KEY","process","env","REACT_APP_API_SPORTS_KEY","StandingsWidget","leagueId","season","teamId","_s","widgetContainerRef","document","getElementById","window","widgets","script","createElement","id","src","type","async","body","appendChild","current","effectiveApiKey","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/git/CourseWork/frontend/src/components/Widgets/StandingsWidget.js"],"sourcesContent":["// frontend/src/components/Widgets/StandingsWidget.js\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\n// ВАЖНО: Ключ API не должен быть захардкожен здесь в продакшене.\r\n// Для разработки можно временно передать, но лучше через переменные окружения,\r\n// доступные во время сборки, или через бэкэнд.\r\n// Поскольку это клиентский виджет, ключ будет виден в HTML.\r\nconst API_SPORTS_KEY = process.env.REACT_APP_API_SPORTS_KEY; // Пример, если ключ доступен через переменные окружения React\r\n\r\nfunction StandingsWidget({ leagueId, season, teamId = \"\" }) {\r\n  const widgetContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Проверяем, загружен ли уже скрипт виджетов, чтобы не добавлять его многократно\r\n    if (document.getElementById(\"api-sports-widgets-script\")) {\r\n      // Если скрипт уже есть, пытаемся инициализировать виджеты (если виджеты это поддерживают)\r\n      // Для данного типа виджета, он обычно сам рендерится при наличии div с атрибутами.\r\n      // Но если бы была JS инициализация, она была бы здесь.\r\n      if (window.widgets) {\r\n        // window.widgets.load(); // Пример, если бы такая функция существовала\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Создаем и добавляем скрипт виджетов в DOM\r\n    const script = document.createElement(\"script\");\r\n    script.id = \"api-sports-widgets-script\";\r\n    script.src = \"https://widgets.api-sports.io/2.0.3/widgets.js\";\r\n    script.type = \"module\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    // Очистка при размонтировании компонента\r\n    return () => {\r\n      // По-хорошему, нужно найти способ \"уничтожить\" виджет или его контейнер,\r\n      // чтобы избежать утечек памяти или дублирования при частой смене параметров.\r\n      // Но сам виджет может не предоставлять такого API.\r\n      // Простое удаление скрипта не всегда эффективно, если он уже выполнился.\r\n      // Если виджет рендерится в widgetContainerRef, можно попробовать его очистить:\r\n      if (widgetContainerRef.current) {\r\n        // widgetContainerRef.current.innerHTML = ''; // Это грубый способ\r\n      }\r\n    };\r\n  }, []); // Загружаем скрипт один раз при монтировании компонента\r\n\r\n  // Если ключ API не предоставлен, показываем сообщение\r\n  // ВАЖНО: Замените на ваш реальный ключ или способ его получения\r\n  const effectiveApiKey = API_SPORTS_KEY || \"YOUR_FALLBACK_API_KEY_HERE\"; // Заглушка, если process.env не работает\r\n\r\n  if (!effectiveApiKey || effectiveApiKey === \"YOUR_FALLBACK_API_KEY_HERE\") {\r\n    console.error(\r\n      \"StandingsWidget: API ключ не найден. Укажите REACT_APP_API_SPORTS_KEY в .env файле.\"\r\n    );\r\n    return (\r\n      <div className=\"p-4 text-brand-text-muted bg-brand-card rounded-lg shadow-md\">\r\n        API ключ для турнирной таблицы не настроен.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // Контейнер для виджета. Ключ (key={leagueId + '-' + season}) важен,\r\n    // чтобы React пересоздавал этот div (и виджет внутри него), когда меняется лига или сезон.\r\n    // Это заставит виджет перезагрузиться с новыми параметрами.\r\n    <div\r\n      key={`${leagueId}-${season}`} // Заставляет React пересоздавать DOM элемент при смене props\r\n      ref={widgetContainerRef}\r\n      id=\"wg-api-football-standings\"\r\n      data-host=\"v3.football.api-sports.io\"\r\n      data-key={effectiveApiKey} // Используем ключ\r\n      data-league={leagueId}\r\n      data-team={teamId} // Если нужно для конкретной команды\r\n      data-season={season}\r\n      data-theme=\"dark\" // Попробуем темную тему, если виджет ее поддерживает\r\n      data-show-errors=\"true\" // Показываем ошибки для отладки\r\n      data-show-logos=\"true\"\r\n      className=\"wg_loader\" // Этот класс может использоваться виджетом для показа загрузчика\r\n    >\r\n      {/* Виджет сам заполнит этот div */}\r\n      {/* Можно добавить свой индикатор загрузки, пока виджет не инициализировался */}\r\n      {/* <p className=\"text-brand-text-muted p-4\">Загрузка турнирной таблицы...</p> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StandingsWidget;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEhD;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC,CAAC;;AAE7D,SAASC,eAAeA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,MAAM,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAMC,kBAAkB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd;IACA,IAAIc,QAAQ,CAACC,cAAc,CAAC,2BAA2B,CAAC,EAAE;MACxD;MACA;MACA;MACA,IAAIC,MAAM,CAACC,OAAO,EAAE;QAClB;MAAA;MAEF;IACF;;IAEA;IACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,EAAE,GAAG,2BAA2B;IACvCF,MAAM,CAACG,GAAG,GAAG,gDAAgD;IAC7DH,MAAM,CAACI,IAAI,GAAG,QAAQ;IACtBJ,MAAM,CAACK,KAAK,GAAG,IAAI;IACnBT,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;;IAEjC;IACA,OAAO,MAAM;MACX;MACA;MACA;MACA;MACA;MACA,IAAIL,kBAAkB,CAACa,OAAO,EAAE;QAC9B;MAAA;IAEJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA;EACA,MAAMC,eAAe,GAAGvB,cAAc,IAAI,4BAA4B,CAAC,CAAC;;EAExE,IAAI,CAACuB,eAAe,IAAIA,eAAe,KAAK,4BAA4B,EAAE;IACxEC,OAAO,CAACC,KAAK,CACX,qFACF,CAAC;IACD,oBACE1B,OAAA;MAAK2B,SAAS,EAAC,8DAA8D;MAAAC,QAAA,EAAC;IAE9E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA;IAAA;IACE;IACA;IACA;IACAhC,OAAA;MACgC;MAC9BiC,GAAG,EAAEvB,kBAAmB;MACxBO,EAAE,EAAC,2BAA2B;MAC9B,aAAU,2BAA2B;MACrC,YAAUO,eAAgB,CAAC;MAAA;MAC3B,eAAalB,QAAS;MACtB,aAAWE,MAAO,CAAC;MAAA;MACnB,eAAaD,MAAO;MACpB,cAAW,MAAM,CAAC;MAAA;MAClB,oBAAiB,MAAM,CAAC;MAAA;MACxB,mBAAgB,MAAM;MACtBoB,SAAS,EAAC,WAAW,CAAC;IAAA,GAXjB,GAAGrB,QAAQ,IAAIC,MAAM,EAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBzB;EAAC;AAEV;AAACvB,EAAA,CA1EQJ,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA4ExB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}