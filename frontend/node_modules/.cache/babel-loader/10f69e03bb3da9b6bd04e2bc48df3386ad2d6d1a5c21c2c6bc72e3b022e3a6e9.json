{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\components\\\\Layout\\\\Header.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/HomePage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"; // Для работы с query параметрами\nimport MatchList from \"../MatchList\";\nimport { getMatches } from \"../../api\";\nimport LeagueSidebar from \"../Layout/LeagueSidebar\";\n\n// Предположим, у вас есть локальные логотипы в src/assets/leagues/\n// Если нет, оставьте URL или null\n// import plLogo from '../assets/leagues/premier-league.png'; // Пример\n// import blLogo from '../assets/leagues/bundesliga.png';\n// import saLogo from '../assets/leagues/serie-a.png';\n// import pdLogo from '../assets/leagues/la-liga.png';\n// import flLogo from '../assets/leagues/ligue-1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leaguesForSidebar = [{\n  code: null,\n  name: \"ВСЕ\",\n  shortName: \"Все\",\n  logo: null\n},\n// Опция \"ВСЕ\"\n// Замените URL на импортированные переменные, если используете локальные лого\n{\n  code: \"PL\",\n  name: \"Premier League\",\n  shortName: \"АПЛ\",\n  logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Premier_League_Logo.svg/1200px-Premier_League_Logo.svg.png\" /* plLogo */\n}, {\n  code: \"BL1\",\n  name: \"Bundesliga\",\n  shortName: \"БУН\",\n  logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/d/df/Bundesliga_logo_%282017%29.svg/1200px-Bundesliga_logo_%282017%29.svg.png\" /* blLogo */\n}, {\n  code: \"SA\",\n  name: \"Serie A\",\n  shortName: \"СА\",\n  logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e9/Serie_A_logo_%282022%29.svg/1200px-Serie_A_logo_%282022%29.svg.png\" /* saLogo */\n}, {\n  code: \"PD\",\n  name: \"La Liga\",\n  shortName: \"ЛАЛ\",\n  logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/LaLiga_logo_2023.svg/1200px-LaLiga_logo_2023.svg.png\" /* pdLogo */\n}, {\n  code: \"FL1\",\n  name: \"Ligue 1\",\n  shortName: \"Л1\",\n  logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Ligue1_Uber_Eats_logo.png/1200px-Ligue1_Uber_Eats_logo.png\" /* flLogo */\n}];\nfunction HomePage() {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // Используем useSearchParams для получения и установки query параметра 'league'\n  const [searchParams, setSearchParams] = useSearchParams();\n  // Получаем 'league' из URL. Если его нет, selectedLeague будет null.\n  const selectedLeague = searchParams.get(\"league\");\n  useEffect(() => {\n    const fetchMatches = async () => {\n      setLoading(true);\n      // selectedLeague может быть null (если не выбран и в URL нет параметра) или кодом лиги\n      const data = await getMatches(selectedLeague);\n      // getMatches теперь должна принимать selectedLeague (который может быть null)\n\n      let upcomingMatches = [];\n      if (Array.isArray(data)) {\n        const now = new Date();\n        // Фильтруем матчи: только предстоящие (не 'FINISHED')\n        // Исключаем матчи, которые уже прошли (matchDate < now)\n        // Ограничение на неделю вперед - опционально, можно убрать, если хотите все предстоящие\n        // const oneWeekFromNow = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);\n\n        upcomingMatches = data.filter(match => {\n          if (!match.utcDate) return false; // Пропускаем матчи без даты\n          const matchDate = new Date(match.utcDate);\n          return match.status !== \"FINISHED\" && matchDate >= now; // && matchDate <= oneWeekFromNow; // Раскомментируйте для ограничения на неделю\n        });\n\n        // Сортируем предстоящие матчи по дате (самые ближайшие вверху)\n        upcomingMatches.sort((a, b) => new Date(a.utcDate) - new Date(b.utcDate));\n        setMatches(upcomingMatches);\n      } else {\n        console.error(\"HomePage: Данные от getMatches не являются массивом!\", data);\n        setMatches([]); // Устанавливаем в пустой массив для безопасности\n      }\n      setLoading(false);\n    };\n    fetchMatches();\n    // Перезагружаем матчи, когда selectedLeague (из URL query параметра) меняется\n  }, [selectedLeague]);\n  const handleLeagueSelect = leagueCode => {\n    // leagueCode будет null для кнопки \"ВСЕ\"\n    if (leagueCode) {\n      setSearchParams({\n        league: leagueCode\n      }); // Устанавливаем параметр ?league=CODE\n    } else {\n      setSearchParams({}); // Очищаем параметры URL (удаляем ?league=...)\n    }\n  };\n\n  // Получаем полное имя выбранной лиги для заголовка\n  // Если selectedLeague равен null (кнопка \"ВСЕ\"), currentLeagueObject будет undefined.\n  const currentLeagueObject = selectedLeague ? leaguesForSidebar.find(l => l.code === selectedLeague) : null; // null если выбраны \"ВСЕ\"\n\n  const pageTitle = currentLeagueObject ? currentLeagueObject.name : \"Все предстоящие матчи\";\n  return (\n    /*#__PURE__*/\n    // Основной flex-контейнер для трех колонок на больших экранах,\n    // или для расположения блоков друг под другом на маленьких.\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row gap-6 lg:gap-8\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"w-full lg:w-64 xl:w-72 flex-shrink-0 mb-6 lg:mb-0 lg:sticky lg:top-24 self-start max-h-[calc(100vh-theme(spacing.24)-theme(spacing.8))] overflow-y-auto rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(LeagueSidebar, {\n          leagues: leaguesForSidebar,\n          selectedLeague: selectedLeague // Передаем null, если не выбрано\n          ,\n          onSelectLeague: handleLeagueSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"w-full lg:flex-grow min-w-0\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl sm:text-3xl font-bold mb-6 text-center text-brand-yellow\",\n          children: pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-64\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl text-gray-400 animate-pulse\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043C\\u0430\\u0442\\u0447\\u0435\\u0439...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(MatchList, {\n          matches: matches,\n          selectedLeague: selectedLeague\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"w-full lg:w-72 xl:w-80 flex-shrink-0 hidden md:block lg:sticky lg:top-24 self-start max-h-[calc(100vh-theme(spacing.24)-theme(spacing.8))] overflow-y-auto rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-4 rounded-lg shadow-md min-h-[300px]\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-3 text-brand-yellow\",\n            children: \"\\u0422\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u0430\\u044F \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400\",\n            children: currentLeagueObject ? `Таблица для ${currentLeagueObject.name}` : \"Выберите лигу для отображения таблицы.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(HomePage, \"t+pO0nFBkZXFt8wMcp866KQWoWc=\", false, function () {\n  return [useSearchParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","MatchList","getMatches","LeagueSidebar","jsxDEV","_jsxDEV","leaguesForSidebar","code","name","shortName","logo","HomePage","_s","matches","setMatches","loading","setLoading","searchParams","setSearchParams","selectedLeague","get","fetchMatches","data","upcomingMatches","Array","isArray","now","Date","filter","match","utcDate","matchDate","status","sort","a","b","console","error","handleLeagueSelect","leagueCode","league","currentLeagueObject","find","l","pageTitle","className","children","leagues","onSelectLeague","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/git/CourseWork/frontend/src/components/Layout/Header.js"],"sourcesContent":["// frontend/src/pages/HomePage.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\"; // Для работы с query параметрами\r\nimport MatchList from \"../MatchList\";\r\nimport { getMatches } from \"../../api\";\r\nimport LeagueSidebar from \"../Layout/LeagueSidebar\";\r\n\r\n// Предположим, у вас есть локальные логотипы в src/assets/leagues/\r\n// Если нет, оставьте URL или null\r\n// import plLogo from '../assets/leagues/premier-league.png'; // Пример\r\n// import blLogo from '../assets/leagues/bundesliga.png';\r\n// import saLogo from '../assets/leagues/serie-a.png';\r\n// import pdLogo from '../assets/leagues/la-liga.png';\r\n// import flLogo from '../assets/leagues/ligue-1.png';\r\n\r\nconst leaguesForSidebar = [\r\n  { code: null, name: \"ВСЕ\", shortName: \"Все\", logo: null }, // Опция \"ВСЕ\"\r\n  // Замените URL на импортированные переменные, если используете локальные лого\r\n  {\r\n    code: \"PL\",\r\n    name: \"Premier League\",\r\n    shortName: \"АПЛ\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Premier_League_Logo.svg/1200px-Premier_League_Logo.svg.png\" /* plLogo */,\r\n  },\r\n  {\r\n    code: \"BL1\",\r\n    name: \"Bundesliga\",\r\n    shortName: \"БУН\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/d/df/Bundesliga_logo_%282017%29.svg/1200px-Bundesliga_logo_%282017%29.svg.png\" /* blLogo */,\r\n  },\r\n  {\r\n    code: \"SA\",\r\n    name: \"Serie A\",\r\n    shortName: \"СА\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e9/Serie_A_logo_%282022%29.svg/1200px-Serie_A_logo_%282022%29.svg.png\" /* saLogo */,\r\n  },\r\n  {\r\n    code: \"PD\",\r\n    name: \"La Liga\",\r\n    shortName: \"ЛАЛ\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/LaLiga_logo_2023.svg/1200px-LaLiga_logo_2023.svg.png\" /* pdLogo */,\r\n  },\r\n  {\r\n    code: \"FL1\",\r\n    name: \"Ligue 1\",\r\n    shortName: \"Л1\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Ligue1_Uber_Eats_logo.png/1200px-Ligue1_Uber_Eats_logo.png\" /* flLogo */,\r\n  },\r\n];\r\n\r\nfunction HomePage() {\r\n  const [matches, setMatches] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // Используем useSearchParams для получения и установки query параметра 'league'\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  // Получаем 'league' из URL. Если его нет, selectedLeague будет null.\r\n  const selectedLeague = searchParams.get(\"league\");\r\n\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      setLoading(true);\r\n      // selectedLeague может быть null (если не выбран и в URL нет параметра) или кодом лиги\r\n      const data = await getMatches(selectedLeague);\r\n      // getMatches теперь должна принимать selectedLeague (который может быть null)\r\n\r\n      let upcomingMatches = [];\r\n      if (Array.isArray(data)) {\r\n        const now = new Date();\r\n        // Фильтруем матчи: только предстоящие (не 'FINISHED')\r\n        // Исключаем матчи, которые уже прошли (matchDate < now)\r\n        // Ограничение на неделю вперед - опционально, можно убрать, если хотите все предстоящие\r\n        // const oneWeekFromNow = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);\r\n\r\n        upcomingMatches = data.filter((match) => {\r\n          if (!match.utcDate) return false; // Пропускаем матчи без даты\r\n          const matchDate = new Date(match.utcDate);\r\n          return match.status !== \"FINISHED\" && matchDate >= now; // && matchDate <= oneWeekFromNow; // Раскомментируйте для ограничения на неделю\r\n        });\r\n\r\n        // Сортируем предстоящие матчи по дате (самые ближайшие вверху)\r\n        upcomingMatches.sort(\r\n          (a, b) => new Date(a.utcDate) - new Date(b.utcDate)\r\n        );\r\n\r\n        setMatches(upcomingMatches);\r\n      } else {\r\n        console.error(\r\n          \"HomePage: Данные от getMatches не являются массивом!\",\r\n          data\r\n        );\r\n        setMatches([]); // Устанавливаем в пустой массив для безопасности\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchMatches();\r\n    // Перезагружаем матчи, когда selectedLeague (из URL query параметра) меняется\r\n  }, [selectedLeague]);\r\n\r\n  const handleLeagueSelect = (leagueCode) => {\r\n    // leagueCode будет null для кнопки \"ВСЕ\"\r\n    if (leagueCode) {\r\n      setSearchParams({ league: leagueCode }); // Устанавливаем параметр ?league=CODE\r\n    } else {\r\n      setSearchParams({}); // Очищаем параметры URL (удаляем ?league=...)\r\n    }\r\n  };\r\n\r\n  // Получаем полное имя выбранной лиги для заголовка\r\n  // Если selectedLeague равен null (кнопка \"ВСЕ\"), currentLeagueObject будет undefined.\r\n  const currentLeagueObject = selectedLeague\r\n    ? leaguesForSidebar.find((l) => l.code === selectedLeague)\r\n    : null; // null если выбраны \"ВСЕ\"\r\n\r\n  const pageTitle = currentLeagueObject\r\n    ? currentLeagueObject.name\r\n    : \"Все предстоящие матчи\";\r\n\r\n  return (\r\n    // Основной flex-контейнер для трех колонок на больших экранах,\r\n    // или для расположения блоков друг под другом на маленьких.\r\n    <div className=\"flex flex-col lg:flex-row gap-6 lg:gap-8\">\r\n      {\" \"}\r\n      {/* Увеличил gap для больших экранов */}\r\n      {/* Левый сайдбар */}\r\n      {/* w-full на мобильных, lg:w-1/5 или lg:w-1/6 на больших */}\r\n      {/* mb-6 lg:mb-0 - отступ снизу на мобильных, убирается на больших */}\r\n      {/* lg:sticky lg:top-24 - прилипание на больших экранах с отступом от хедера */}\r\n      {/* self-start - чтобы прилипание работало корректно, если контент выше */}\r\n      {/* max-h-[calc(100vh-theme(spacing.24))] overflow-y-auto - ограничение высоты и скролл */}\r\n      <aside className=\"w-full lg:w-64 xl:w-72 flex-shrink-0 mb-6 lg:mb-0 lg:sticky lg:top-24 self-start max-h-[calc(100vh-theme(spacing.24)-theme(spacing.8))] overflow-y-auto rounded-lg\">\r\n        {/* theme(spacing.24) - примерная высота хедера, theme(spacing.8) - отступы HomePage */}\r\n        <LeagueSidebar\r\n          leagues={leaguesForSidebar}\r\n          selectedLeague={selectedLeague} // Передаем null, если не выбрано\r\n          onSelectLeague={handleLeagueSelect}\r\n        />\r\n      </aside>\r\n      {/* Центральная колонка с матчами */}\r\n      {/* w-full на мобильных, lg:flex-grow чтобы занимала оставшееся место на больших */}\r\n      <section className=\"w-full lg:flex-grow min-w-0\">\r\n        {\" \"}\r\n        {/* min-w-0 для правильной работы flex-grow с гридами */}\r\n        <h1 className=\"text-2xl sm:text-3xl font-bold mb-6 text-center text-brand-yellow\">\r\n          {pageTitle}\r\n        </h1>\r\n        {loading ? (\r\n          <div className=\"flex justify-center items-center h-64\">\r\n            {/* Можно добавить спиннер загрузки */}\r\n            <p className=\"text-xl text-gray-400 animate-pulse\">\r\n              Загрузка матчей...\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <MatchList matches={matches} selectedLeague={selectedLeague} />\r\n        )}\r\n      </section>\r\n      {/* Правый сайдбар (заглушка для турнирной таблицы) */}\r\n      {/* hidden md:block - скрыт на маленьких, виден на средних и больше */}\r\n      {/* lg:w-1/5 или lg:w-1/6 - ширина на больших экранах */}\r\n      <aside className=\"w-full lg:w-72 xl:w-80 flex-shrink-0 hidden md:block lg:sticky lg:top-24 self-start max-h-[calc(100vh-theme(spacing.24)-theme(spacing.8))] overflow-y-auto rounded-lg\">\r\n        <div className=\"bg-gray-800 p-4 rounded-lg shadow-md min-h-[300px]\">\r\n          {\" \"}\r\n          {/* min-h для минимальной высоты */}\r\n          <h2 className=\"text-xl font-semibold mb-3 text-brand-yellow\">\r\n            Турнирная таблица\r\n          </h2>\r\n          <p className=\"text-gray-400\">\r\n            {currentLeagueObject\r\n              ? `Таблица для ${currentLeagueObject.name}`\r\n              : \"Выберите лигу для отображения таблицы.\"}\r\n          </p>\r\n          {/* Здесь будет ваш виджет */}\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}