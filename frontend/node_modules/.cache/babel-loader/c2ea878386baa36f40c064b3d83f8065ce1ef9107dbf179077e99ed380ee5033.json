{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\components\\\\MatchList.js\";\n// frontend/src/components/MatchList.js\nimport React from \"react\";\nimport MatchItem from \"./MatchItem\";\n\n// LeagueIdentifierMap - чтобы получить competition_name по competition_code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leagueIdentifierMap = {\n  PL: \"Premier League\",\n  PD: \"La Liga\",\n  SA: \"Serie A\",\n  BL1: \"Bundesliga\",\n  FL1: \"Ligue 1\"\n  // Добавьте другие, если есть\n};\nfunction MatchList({\n  matches,\n  selectedLeague,\n  orderedLeagues\n}) {\n  // Принимаем orderedLeagues\n  if (!Array.isArray(matches)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-brand-primary-red py-10\",\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043C\\u0430\\u0442\\u0447\\u0435\\u0439 \\u043D\\u0435 \\u0432 \\u043E\\u0436\\u0438\\u0434\\u0430\\u0435\\u043C\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  if (matches.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-brand-text-muted py-10\",\n      children: \"\\u041C\\u0430\\u0442\\u0447\\u0438 \\u043D\\u0430 \\u0431\\u043B\\u0438\\u0436\\u0430\\u0439\\u0448\\u0443\\u044E \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  let groupedMatches = {};\n  let otherLeagues = []; // Для лиг, которых нет в orderedLeagues\n\n  if (!selectedLeague) {\n    // Если выбрано \"ВСЕ\"\n    matches.forEach(match => {\n      const leagueCode = match.competition_code;\n      // Используем competition_name для отображения, если он есть\n      const leagueName = match.competition_name || leagueIdentifierMap[leagueCode] || \"Другие лиги\";\n      if (orderedLeagues.some(l => l.code === leagueCode)) {\n        // Если лига в нашем упорядоченном списке\n        if (!groupedMatches[leagueCode]) {\n          // Группируем по коду, чтобы потом использовать в сортировке\n          groupedMatches[leagueCode] = {\n            name: leagueName,\n            matches: []\n          };\n        }\n        groupedMatches[leagueCode].matches.push(match);\n      } else {\n        // Если лига не в нашем упорядоченном списке, добавляем в \"другие\"\n        if (!groupedMatches[\"OTHER\"]) {\n          groupedMatches[\"OTHER\"] = {\n            name: \"Другие лиги\",\n            matches: []\n          };\n        }\n        groupedMatches[\"OTHER\"].matches.push(match);\n      }\n    });\n  }\n\n  // Определяем порядок отображения лиг\n  let leaguesToDisplay = [];\n  if (!selectedLeague) {\n    // Только если выбрано \"ВСЕ\"\n    // Добавляем лиги в заданном порядке\n    orderedLeagues.forEach(league => {\n      if (league.code && groupedMatches[league.code]) {\n        // Если это не \"ВСЕ\" и для лиги есть матчи\n        leaguesToDisplay.push(groupedMatches[league.code]);\n      }\n    });\n    // Добавляем \"Другие лиги\" в конец, если есть\n    if (groupedMatches[\"OTHER\"]) {\n      leaguesToDisplay.push(groupedMatches[\"OTHER\"]);\n    }\n  } else {\n    // Если выбрана конкретная лига, то она не группируется\n    // Мы просто рендерим все 'matches' напрямую (уже отфильтрованные в HomePage)\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !selectedLeague ?\n    // Отображение с группировкой по лигам (если выбрано \"ВСЕ\")\n    leaguesToDisplay.map((leagueGroup // Итерируем по отсортированному списку\n    ) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl sm:text-3xl font-bold mb-6 text-center text-brand-primary-yellow uppercase tracking-wider relative\",\n        children: [leagueGroup.name, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute left-1/2 -translate-x-1/2 bottom-0 w-3/4 h-0.5 bg-gradient-to-r from-transparent via-brand-primary-red to-transparent opacity-75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8\",\n        children: leagueGroup.matches.map(match => /*#__PURE__*/_jsxDEV(MatchItem, {\n          match: match\n        }, match.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, leagueGroup.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)) :\n    /*#__PURE__*/\n    // Отображение для одной выбранной лиги\n    _jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8\",\n      children: matches.map(match => /*#__PURE__*/_jsxDEV(MatchItem, {\n        match: match\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_c = MatchList;\nexport default MatchList;\nvar _c;\n$RefreshReg$(_c, \"MatchList\");","map":{"version":3,"names":["React","MatchItem","jsxDEV","_jsxDEV","leagueIdentifierMap","PL","PD","SA","BL1","FL1","MatchList","matches","selectedLeague","orderedLeagues","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","groupedMatches","otherLeagues","forEach","match","leagueCode","competition_code","leagueName","competition_name","some","l","code","name","push","leaguesToDisplay","league","map","leagueGroup","id","_c","$RefreshReg$"],"sources":["D:/git/CourseWork/frontend/src/components/MatchList.js"],"sourcesContent":["// frontend/src/components/MatchList.js\r\nimport React from \"react\";\r\nimport MatchItem from \"./MatchItem\";\r\n\r\n// LeagueIdentifierMap - чтобы получить competition_name по competition_code\r\nconst leagueIdentifierMap = {\r\n  PL: \"Premier League\",\r\n  PD: \"La Liga\",\r\n  SA: \"Serie A\",\r\n  BL1: \"Bundesliga\",\r\n  FL1: \"Ligue 1\",\r\n  // Добавьте другие, если есть\r\n};\r\n\r\nfunction MatchList({ matches, selectedLeague, orderedLeagues }) {\r\n  // Принимаем orderedLeagues\r\n  if (!Array.isArray(matches)) {\r\n    return (\r\n      <p className=\"text-center text-brand-primary-red py-10\">\r\n        Ошибка: данные матчей не в ожидаемом формате.\r\n      </p>\r\n    );\r\n  }\r\n  if (matches.length === 0) {\r\n    return (\r\n      <p className=\"text-center text-brand-text-muted py-10\">\r\n        Матчи на ближайшую неделю не найдены.\r\n      </p>\r\n    );\r\n  }\r\n\r\n  let groupedMatches = {};\r\n  let otherLeagues = []; // Для лиг, которых нет в orderedLeagues\r\n\r\n  if (!selectedLeague) {\r\n    // Если выбрано \"ВСЕ\"\r\n    matches.forEach((match) => {\r\n      const leagueCode = match.competition_code;\r\n      // Используем competition_name для отображения, если он есть\r\n      const leagueName =\r\n        match.competition_name ||\r\n        leagueIdentifierMap[leagueCode] ||\r\n        \"Другие лиги\";\r\n\r\n      if (orderedLeagues.some((l) => l.code === leagueCode)) {\r\n        // Если лига в нашем упорядоченном списке\r\n        if (!groupedMatches[leagueCode]) {\r\n          // Группируем по коду, чтобы потом использовать в сортировке\r\n          groupedMatches[leagueCode] = { name: leagueName, matches: [] };\r\n        }\r\n        groupedMatches[leagueCode].matches.push(match);\r\n      } else {\r\n        // Если лига не в нашем упорядоченном списке, добавляем в \"другие\"\r\n        if (!groupedMatches[\"OTHER\"]) {\r\n          groupedMatches[\"OTHER\"] = { name: \"Другие лиги\", matches: [] };\r\n        }\r\n        groupedMatches[\"OTHER\"].matches.push(match);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Определяем порядок отображения лиг\r\n  let leaguesToDisplay = [];\r\n  if (!selectedLeague) {\r\n    // Только если выбрано \"ВСЕ\"\r\n    // Добавляем лиги в заданном порядке\r\n    orderedLeagues.forEach((league) => {\r\n      if (league.code && groupedMatches[league.code]) {\r\n        // Если это не \"ВСЕ\" и для лиги есть матчи\r\n        leaguesToDisplay.push(groupedMatches[league.code]);\r\n      }\r\n    });\r\n    // Добавляем \"Другие лиги\" в конец, если есть\r\n    if (groupedMatches[\"OTHER\"]) {\r\n      leaguesToDisplay.push(groupedMatches[\"OTHER\"]);\r\n    }\r\n  } else {\r\n    // Если выбрана конкретная лига, то она не группируется\r\n    // Мы просто рендерим все 'matches' напрямую (уже отфильтрованные в HomePage)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!selectedLeague ? ( // Отображение с группировкой по лигам (если выбрано \"ВСЕ\")\r\n        leaguesToDisplay.map(\r\n          (\r\n            leagueGroup // Итерируем по отсортированному списку\r\n          ) => (\r\n            <div key={leagueGroup.name} className=\"mb-10\">\r\n              {/* Заголовок лиги с желтым текстом и красной подсветкой */}\r\n              <h2 className=\"text-2xl sm:text-3xl font-bold mb-6 text-center text-brand-primary-yellow uppercase tracking-wider relative\">\r\n                {leagueGroup.name}\r\n                <div className=\"absolute left-1/2 -translate-x-1/2 bottom-0 w-3/4 h-0.5 bg-gradient-to-r from-transparent via-brand-primary-red to-transparent opacity-75\"></div>\r\n              </h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8\">\r\n                {leagueGroup.matches.map((match) => (\r\n                  <MatchItem key={match.id} match={match} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )\r\n        )\r\n      ) : (\r\n        // Отображение для одной выбранной лиги\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8\">\r\n          {matches.map((match) => (\r\n            <MatchItem key={match.id} match={match} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default MatchList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}