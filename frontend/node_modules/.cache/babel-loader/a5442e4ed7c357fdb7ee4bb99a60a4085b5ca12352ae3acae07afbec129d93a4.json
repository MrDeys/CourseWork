{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\components\\\\MatchList.js\";\n// frontend/src/components/MatchList.js\nimport React from \"react\";\nimport MatchItem from \"./MatchItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MatchList({\n  matches,\n  selectedLeague\n}) {\n  if (!Array.isArray(matches)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-500\",\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043C\\u0430\\u0442\\u0447\\u0435\\u0439 \\u043D\\u0435 \\u0432 \\u043E\\u0436\\u0438\\u0434\\u0430\\u0435\\u043C\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  if (matches.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-400\",\n      children: \"\\u041C\\u0430\\u0442\\u0447\\u0438 \\u043D\\u0430 \\u0431\\u043B\\u0438\\u0436\\u0430\\u0439\\u0448\\u0443\\u044E \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Группируем матчи по лигам, если не выбрана конкретная лига\n  let groupedMatches = {};\n  if (!selectedLeague) {\n    // Если выбрано \"ВСЕ\"\n    matches.forEach(match => {\n      const leagueName = match.competition_name || \"Другие\";\n      if (!groupedMatches[leagueName]) {\n        groupedMatches[leagueName] = [];\n      }\n      groupedMatches[leagueName].push(match);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !selectedLeague ?\n    // Отображение с группировкой по лигам\n    Object.keys(groupedMatches).map(leagueName => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-brand-yellow border-b-2 border-gray-700 pb-2\",\n        children: leagueName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [\" \", groupedMatches[leagueName].map(match => /*#__PURE__*/_jsxDEV(MatchItem, {\n          match: match\n        }, match.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, leagueName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)) :\n    /*#__PURE__*/\n    // Отображение для одной выбранной лиги\n    _jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [\" \", matches.map(match => /*#__PURE__*/_jsxDEV(MatchItem, {\n        match: match\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = MatchList;\nexport default MatchList;\nvar _c;\n$RefreshReg$(_c, \"MatchList\");","map":{"version":3,"names":["React","MatchItem","jsxDEV","_jsxDEV","MatchList","matches","selectedLeague","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","groupedMatches","forEach","match","leagueName","competition_name","push","Object","keys","map","id","_c","$RefreshReg$"],"sources":["D:/git/CourseWork/frontend/src/components/MatchList.js"],"sourcesContent":["// frontend/src/components/MatchList.js\r\nimport React from \"react\";\r\nimport MatchItem from \"./MatchItem\";\r\n\r\nfunction MatchList({ matches, selectedLeague }) {\r\n  if (!Array.isArray(matches)) {\r\n    return (\r\n      <p className=\"text-center text-red-500\">\r\n        Ошибка: данные матчей не в ожидаемом формате.\r\n      </p>\r\n    );\r\n  }\r\n\r\n  if (matches.length === 0) {\r\n    return (\r\n      <p className=\"text-center text-gray-400\">\r\n        Матчи на ближайшую неделю не найдены.\r\n      </p>\r\n    );\r\n  }\r\n\r\n  // Группируем матчи по лигам, если не выбрана конкретная лига\r\n  let groupedMatches = {};\r\n  if (!selectedLeague) {\r\n    // Если выбрано \"ВСЕ\"\r\n    matches.forEach((match) => {\r\n      const leagueName = match.competition_name || \"Другие\";\r\n      if (!groupedMatches[leagueName]) {\r\n        groupedMatches[leagueName] = [];\r\n      }\r\n      groupedMatches[leagueName].push(match);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!selectedLeague ? (\r\n        // Отображение с группировкой по лигам\r\n        Object.keys(groupedMatches).map((leagueName) => (\r\n          <div key={leagueName} className=\"mb-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 text-brand-yellow border-b-2 border-gray-700 pb-2\">\r\n              {leagueName}\r\n            </h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {\" \"}\r\n              {/* 2 колонки на md и больше */}\r\n              {groupedMatches[leagueName].map((match) => (\r\n                <MatchItem key={match.id} match={match} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        // Отображение для одной выбранной лиги\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {\" \"}\r\n          {/* 2 колонки на md и больше */}\r\n          {matches.map((match) => (\r\n            <MatchItem key={match.id} match={match} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchList;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAC;EAAEC,OAAO;EAAEC;AAAe,CAAC,EAAE;EAC9C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,EAAE;IAC3B,oBACEF,OAAA;MAAGM,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAER;EAEA,IAAIT,OAAO,CAACU,MAAM,KAAK,CAAC,EAAE;IACxB,oBACEZ,OAAA;MAAGM,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAER;;EAEA;EACA,IAAIE,cAAc,GAAG,CAAC,CAAC;EACvB,IAAI,CAACV,cAAc,EAAE;IACnB;IACAD,OAAO,CAACY,OAAO,CAAEC,KAAK,IAAK;MACzB,MAAMC,UAAU,GAAGD,KAAK,CAACE,gBAAgB,IAAI,QAAQ;MACrD,IAAI,CAACJ,cAAc,CAACG,UAAU,CAAC,EAAE;QAC/BH,cAAc,CAACG,UAAU,CAAC,GAAG,EAAE;MACjC;MACAH,cAAc,CAACG,UAAU,CAAC,CAACE,IAAI,CAACH,KAAK,CAAC;IACxC,CAAC,CAAC;EACJ;EAEA,oBACEf,OAAA;IAAAO,QAAA,EACG,CAACJ,cAAc;IACd;IACAgB,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC,CAACQ,GAAG,CAAEL,UAAU,iBACzChB,OAAA;MAAsBM,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACpCP,OAAA;QAAIM,SAAS,EAAC,+EAA+E;QAAAC,QAAA,EAC1FS;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACLX,OAAA;QAAKM,SAAS,EAAC,uCAAuC;QAAAC,QAAA,GACnD,GAAG,EAEHM,cAAc,CAACG,UAAU,CAAC,CAACK,GAAG,CAAEN,KAAK,iBACpCf,OAAA,CAACF,SAAS;UAAgBiB,KAAK,EAAEA;QAAM,GAAvBA,KAAK,CAACO,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAVEK,UAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWf,CACN,CAAC;IAAA;IAEF;IACAX,OAAA;MAAKM,SAAS,EAAC,uCAAuC;MAAAC,QAAA,GACnD,GAAG,EAEHL,OAAO,CAACmB,GAAG,CAAEN,KAAK,iBACjBf,OAAA,CAACF,SAAS;QAAgBiB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACO,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACY,EAAA,GA5DQtB,SAAS;AA8DlB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}