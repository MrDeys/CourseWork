{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/HomePage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"; // Для работы с query параметрами\nimport MatchList from \"../components/MatchList\";\nimport { getMatches } from \"../api\";\nimport LeagueSidebar from \"../components/Layout/LeagueSidebar\"; // Новый компонент\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leaguesForSidebar = [\n// Используем этот список для сайдбара\n{\n  code: null,\n  name: \"ВСЕ\",\n  logo: null\n},\n// Опция \"ВСЕ\"\n{\n  code: \"PL\",\n  name: \"Premier League\",\n  logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Premier_League_Logo.svg/1200px-Premier_League_Logo.svg.png\"\n},\n// Пример лого\n{\n  code: \"BL1\",\n  name: \"Bundesliga\",\n  logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/d/df/Bundesliga_logo_%282017%29.svg/1200px-Bundesliga_logo_%282017%29.svg.png\"\n}, {\n  code: \"SA\",\n  name: \"Serie A\",\n  logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e9/Serie_A_logo_%282022%29.svg/1200px-Serie_A_logo_%282022%29.svg.png\"\n}, {\n  code: \"PD\",\n  name: \"La Liga\",\n  logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/LaLiga_logo_2023.svg/1200px-LaLiga_logo_2023.svg.png\"\n}, {\n  code: \"FL1\",\n  name: \"Ligue 1\",\n  logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Ligue1_Uber_Eats_logo.png/1200px-Ligue1_Uber_Eats_logo.png\"\n}];\nfunction HomePage() {\n  _s();\n  var _leaguesForSidebar$fi;\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // Используем useSearchParams для получения и установки query параметра 'league'\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedLeague = searchParams.get(\"league\"); // Получаем 'league' из URL\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      setLoading(true);\n      // selectedLeague может быть null (если не выбран) или кодом лиги\n      const data = await getMatches(selectedLeague);\n\n      // frontend/src/pages/HomePage.js\n      // ... внутри fetchMatches, после const data = await getMatches(selectedLeague);\n      let filteredMatches = [];\n      if (Array.isArray(data)) {\n        const now = new Date();\n        const oneWeekFromNow = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);\n        filteredMatches = data.filter(match => {\n          const matchDate = new Date(match.utcDate); // Предполагаем, что utcDate это строка UTC\n          return match.status !== \"FINISHED\" && matchDate >= now && matchDate <= oneWeekFromNow;\n        });\n        // Сортируем по дате еще раз, так как фильтрация могла нарушить порядок, если он был не строгий\n        filteredMatches.sort((a, b) => new Date(a.utcDate) - new Date(b.utcDate));\n      }\n      // ...\n      // if (Array.isArray(filteredMatches)) { // Проверяем отфильтрованный массив\n      //   setMatches(filteredMatches);\n      // } else { ... }\n      // Заменяем setMatches(data) на:\n\n      if (Array.isArray(data)) {\n        setMatches(filteredMatches);\n      } else {\n        console.error(\"HomePage: Данные от getMatches не являются массивом!\", data);\n        setMatches([]);\n      }\n      setLoading(false);\n    };\n    fetchMatches();\n    // Перезагружаем матчи, когда selectedLeague (из URL query параметра) меняется\n  }, [selectedLeague]);\n  const handleLeagueSelect = leagueCode => {\n    if (leagueCode) {\n      setSearchParams({\n        league: leagueCode\n      });\n    } else {\n      setSearchParams({}); // Убираем параметр 'league', если выбрано \"ВСЕ\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:flex-row gap-6\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"w-full md:w-1/5 lg:w-1/6 sticky top-20 self-start\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(LeagueSidebar, {\n        leagues: leaguesForSidebar,\n        selectedLeague: selectedLeague,\n        onSelectLeague: handleLeagueSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"w-full md:w-3/5 lg:w-4/6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6 text-center text-brand-yellow\",\n        children: selectedLeague ? (_leaguesForSidebar$fi = leaguesForSidebar.find(l => l.code === selectedLeague)) === null || _leaguesForSidebar$fi === void 0 ? void 0 : _leaguesForSidebar$fi.name : \"Все предстоящие матчи\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043C\\u0430\\u0442\\u0447\\u0435\\u0439...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MatchList, {\n        matches: matches,\n        selectedLeague: selectedLeague\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"w-full md:w-1/5 lg:w-1/6 hidden md:block sticky top-20 self-start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-lg shadow-md min-h-[300px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-3 text-brand-yellow\",\n          children: \"\\u0422\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u0430\\u044F \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0432\\u0438\\u0434\\u0436\\u0435\\u0442 \\u0442\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u043E\\u0439 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"t+pO0nFBkZXFt8wMcp866KQWoWc=\", false, function () {\n  return [useSearchParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","MatchList","getMatches","LeagueSidebar","jsxDEV","_jsxDEV","leaguesForSidebar","code","name","logo","HomePage","_s","_leaguesForSidebar$fi","matches","setMatches","loading","setLoading","searchParams","setSearchParams","selectedLeague","get","fetchMatches","data","filteredMatches","Array","isArray","now","Date","oneWeekFromNow","getTime","filter","match","matchDate","utcDate","status","sort","a","b","console","error","handleLeagueSelect","leagueCode","league","className","children","leagues","onSelectLeague","fileName","_jsxFileName","lineNumber","columnNumber","find","l","_c","$RefreshReg$"],"sources":["D:/git/CourseWork/frontend/src/pages/HomePage.js"],"sourcesContent":["// frontend/src/pages/HomePage.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\"; // Для работы с query параметрами\r\nimport MatchList from \"../components/MatchList\";\r\nimport { getMatches } from \"../api\";\r\nimport LeagueSidebar from \"../components/Layout/LeagueSidebar\"; // Новый компонент\r\n\r\nconst leaguesForSidebar = [\r\n  // Используем этот список для сайдбара\r\n  { code: null, name: \"ВСЕ\", logo: null }, // Опция \"ВСЕ\"\r\n  {\r\n    code: \"PL\",\r\n    name: \"Premier League\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Premier_League_Logo.svg/1200px-Premier_League_Logo.svg.png\",\r\n  }, // Пример лого\r\n  {\r\n    code: \"BL1\",\r\n    name: \"Bundesliga\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/d/df/Bundesliga_logo_%282017%29.svg/1200px-Bundesliga_logo_%282017%29.svg.png\",\r\n  },\r\n  {\r\n    code: \"SA\",\r\n    name: \"Serie A\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e9/Serie_A_logo_%282022%29.svg/1200px-Serie_A_logo_%282022%29.svg.png\",\r\n  },\r\n  {\r\n    code: \"PD\",\r\n    name: \"La Liga\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/LaLiga_logo_2023.svg/1200px-LaLiga_logo_2023.svg.png\",\r\n  },\r\n  {\r\n    code: \"FL1\",\r\n    name: \"Ligue 1\",\r\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Ligue1_Uber_Eats_logo.png/1200px-Ligue1_Uber_Eats_logo.png\",\r\n  },\r\n];\r\n\r\nfunction HomePage() {\r\n  const [matches, setMatches] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // Используем useSearchParams для получения и установки query параметра 'league'\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const selectedLeague = searchParams.get(\"league\"); // Получаем 'league' из URL\r\n\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      setLoading(true);\r\n      // selectedLeague может быть null (если не выбран) или кодом лиги\r\n      const data = await getMatches(selectedLeague);\r\n\r\n      // frontend/src/pages/HomePage.js\r\n      // ... внутри fetchMatches, после const data = await getMatches(selectedLeague);\r\n      let filteredMatches = [];\r\n      if (Array.isArray(data)) {\r\n        const now = new Date();\r\n        const oneWeekFromNow = new Date(\r\n          now.getTime() + 7 * 24 * 60 * 60 * 1000\r\n        );\r\n        filteredMatches = data.filter((match) => {\r\n          const matchDate = new Date(match.utcDate); // Предполагаем, что utcDate это строка UTC\r\n          return (\r\n            match.status !== \"FINISHED\" &&\r\n            matchDate >= now &&\r\n            matchDate <= oneWeekFromNow\r\n          );\r\n        });\r\n        // Сортируем по дате еще раз, так как фильтрация могла нарушить порядок, если он был не строгий\r\n        filteredMatches.sort(\r\n          (a, b) => new Date(a.utcDate) - new Date(b.utcDate)\r\n        );\r\n      }\r\n      // ...\r\n      // if (Array.isArray(filteredMatches)) { // Проверяем отфильтрованный массив\r\n      //   setMatches(filteredMatches);\r\n      // } else { ... }\r\n      // Заменяем setMatches(data) на:\r\n\r\n      if (Array.isArray(data)) {\r\n        setMatches(filteredMatches);\r\n      } else {\r\n        console.error(\r\n          \"HomePage: Данные от getMatches не являются массивом!\",\r\n          data\r\n        );\r\n        setMatches([]);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchMatches();\r\n    // Перезагружаем матчи, когда selectedLeague (из URL query параметра) меняется\r\n  }, [selectedLeague]);\r\n\r\n  const handleLeagueSelect = (leagueCode) => {\r\n    if (leagueCode) {\r\n      setSearchParams({ league: leagueCode });\r\n    } else {\r\n      setSearchParams({}); // Убираем параметр 'league', если выбрано \"ВСЕ\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row gap-6\">\r\n      {\" \"}\r\n      {/* Основной flex-контейнер для колонок */}\r\n      {/* Левый сайдбар */}\r\n      <aside className=\"w-full md:w-1/5 lg:w-1/6 sticky top-20 self-start\">\r\n        {\" \"}\r\n        {/* self-start для прилипания, если контент выше */}\r\n        <LeagueSidebar\r\n          leagues={leaguesForSidebar}\r\n          selectedLeague={selectedLeague}\r\n          onSelectLeague={handleLeagueSelect}\r\n        />\r\n      </aside>\r\n      {/* Центральная колонка с матчами */}\r\n      <section className=\"w-full md:w-3/5 lg:w-4/6\">\r\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-brand-yellow\">\r\n          {selectedLeague\r\n            ? leaguesForSidebar.find((l) => l.code === selectedLeague)?.name\r\n            : \"Все предстоящие матчи\"}\r\n        </h1>\r\n        {loading ? (\r\n          <p className=\"text-center\">Загрузка матчей...</p>\r\n        ) : (\r\n          <MatchList matches={matches} selectedLeague={selectedLeague} />\r\n        )}\r\n      </section>\r\n      {/* Правый сайдбар (пока пустой) */}\r\n      <aside className=\"w-full md:w-1/5 lg:w-1/6 hidden md:block sticky top-20 self-start\">\r\n        <div className=\"bg-gray-800 p-4 rounded-lg shadow-md min-h-[300px]\">\r\n          <h2 className=\"text-xl font-semibold mb-3 text-brand-yellow\">\r\n            Турнирная таблица\r\n          </h2>\r\n          <p className=\"text-gray-400\">Здесь будет виджет турнирной таблицы.</p>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}