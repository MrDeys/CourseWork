{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// Это ключевая строка для запуска React-приложения.\n// `document.getElementById(\"root\")` находит в твоем `public/index.html` элемент `<div>` с `id=\"root\"`.\n// <div id=\"root\"></div> - это то место в HTML-странице, куда будет \"встроен\" весь твой React-код.\n// `ReactDOM.createRoot()` создает новый \"корень\" React, который будет управлять DOM-деревом внутри этого `div`.\n// Это более современный и производительный способ рендеринга в React 18+ по сравнению со старым `ReactDOM.render()`.\n\n// Рендеринг корневого компонента в DOM\nroot.render(\n/*#__PURE__*/\n// Метод `render` \"рисует\" React-элементы внутри созданного `root` элемента.\n_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/git/CourseWork/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// Это ключевая строка для запуска React-приложения.\n// `document.getElementById(\"root\")` находит в твоем `public/index.html` элемент `<div>` с `id=\"root\"`.\n// <div id=\"root\"></div> - это то место в HTML-странице, куда будет \"встроен\" весь твой React-код.\n// `ReactDOM.createRoot()` создает новый \"корень\" React, который будет управлять DOM-деревом внутри этого `div`.\n// Это более современный и производительный способ рендеринга в React 18+ по сравнению со старым `ReactDOM.render()`.\n\n// Рендеринг корневого компонента в DOM\nroot.render(\n  // Метод `render` \"рисует\" React-элементы внутри созданного `root` элемента.\n  <React.StrictMode>\n    {/* <React.StrictMode> - Это специальный компонент React, который помогает выявлять потенциальные проблемы в приложении во время разработки.\n        Он не рендерит никаких видимых элементов UI. Вместо этого он включает дополнительные проверки и предупреждения:\n        - Идентифицирует небезопасные жизненные циклы компонентов.\n        - Предупреждает об использовании устаревших API.\n        - Обнаруживает нежелательные побочные эффекты.\n        Важно: `StrictMode` работает ТОЛЬКО в режиме разработки и не влияет на производительность или поведение приложения в продакшене. */}\n    <App />\n    {/* Здесь мы рендерим наш главный компонент `App`.\n        Весь твой React-сайт начинается именно с этого компонента. */}\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACAH,IAAI,CAACI,MAAM;AAAA;AACT;AACAL,OAAA,CAACJ,KAAK,CAACU,UAAU;EAAAC,QAAA,eAOfP,OAAA,CAACF,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAGS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}