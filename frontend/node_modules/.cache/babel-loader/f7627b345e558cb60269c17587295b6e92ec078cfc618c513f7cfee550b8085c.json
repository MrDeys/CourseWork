{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nconst parseData = data => {\n  if (typeof data === \"string\") {\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      console.error(\"Ошибка парсинга JSON строки от API:\", e);\n      return null;\n    }\n  }\n  return data;\n};\nexport const getMatches = async (leagueCode = null) => {\n  try {\n    let url = `${API_BASE_URL}/matches/`;\n    if (leagueCode) {\n      url += `?league=${leagueCode}`;\n    }\n    const response = await axios.get(url);\n    const parsedData = parseData(response.data);\n    return Array.isArray(parsedData) ? parsedData : [];\n  } catch (error) {\n    console.error(\"Ошибка при загрузке списка матчей:\", error);\n    return [];\n  }\n};\nexport const getMatchId = async matchId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/matches/${matchId}`);\n    const parsedData = parseData(response.data);\n    return parsedData;\n  } catch (error) {\n    console.error(`Ошибка при загрузке матча:`, error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","parseData","data","JSON","parse","e","console","error","getMatches","leagueCode","url","response","get","parsedData","Array","isArray","getMatchId","matchId"],"sources":["D:/git/CourseWork/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\nconst parseData = (data) => {\r\n  if (typeof data === \"string\") {\r\n    try {\r\n      return JSON.parse(data);\r\n    } catch (e) {\r\n      console.error(\"Ошибка парсинга JSON строки от API:\", e);\r\n      return null;\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const getMatches = async (leagueCode = null) => {\r\n  try {\r\n    let url = `${API_BASE_URL}/matches/`;\r\n    if (leagueCode) {\r\n      url += `?league=${leagueCode}`;\r\n    }\r\n    const response = await axios.get(url);\r\n    const parsedData = parseData(response.data);\r\n    return Array.isArray(parsedData) ? parsedData : [];\r\n  } catch (error) {\r\n    console.error(\"Ошибка при загрузке списка матчей:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMatchId = async (matchId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/matches/${matchId}`);\r\n    const parsedData = parseData(response.data);\r\n    return parsedData;\r\n  } catch (error) {\r\n    console.error(`Ошибка при загрузке матча:`, error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAC1B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,CAAC,CAAC;MACvD,OAAO,IAAI;IACb;EACF;EACA,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOC,UAAU,GAAG,IAAI,KAAK;EACrD,IAAI;IACF,IAAIC,GAAG,GAAG,GAAGV,YAAY,WAAW;IACpC,IAAIS,UAAU,EAAE;MACdC,GAAG,IAAI,WAAWD,UAAU,EAAE;IAChC;IACA,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACF,GAAG,CAAC;IACrC,MAAMG,UAAU,GAAGZ,SAAS,CAACU,QAAQ,CAACT,IAAI,CAAC;IAC3C,OAAOY,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,GAAGA,UAAU,GAAG,EAAE;EACpD,CAAC,CAAC,OAAON,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,YAAYiB,OAAO,EAAE,CAAC;IACtE,MAAMJ,UAAU,GAAGZ,SAAS,CAACU,QAAQ,CAACT,IAAI,CAAC;IAC3C,OAAOW,UAAU;EACnB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}