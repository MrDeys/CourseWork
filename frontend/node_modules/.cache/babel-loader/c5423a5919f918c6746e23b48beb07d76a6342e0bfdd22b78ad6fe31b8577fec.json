{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\CourseWork\\\\frontend\\\\src\\\\components\\\\Layout\\\\LeagueSidebar.js\";\n// frontend/src/components/Layout/LeagueSidebar.js\n\nimport React from \"react\";\n// Импортируем библиотеку React, необходимую для создания функциональных компонентов.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeagueSidebar({\n  leagues,\n  selectedLeague,\n  onSelectLeague\n}) {\n  // Определяем функциональный React-компонент `LeagueSidebar`.\n  // Он принимает три \"пропса\" (свойства) от родительского компонента (например, `HomePage.js`):\n  // - `leagues`: Массив объектов лиг, которые нужно отобразить в сайдбаре (включая \"ВСЕ\").\n  // - `selectedLeague`: Код текущей выбранной лиги (или `null` для \"ВСЕ\").\n  // - `onSelectLeague`: Функция-колбэк, которая будет вызвана при выборе лиги в сайдбаре,\n  //   чтобы обновить состояние выбранной лиги в родительском компоненте.\n\n  return (\n    /*#__PURE__*/\n    // Вся JSX-разметка, которая будет отрисована этим компонентом.\n    _jsxDEV(\"div\", {\n      className: \"bg-color-surface p-2 sm:p-3 rounded-lg shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1.5 sm:space-y-2\",\n        children: leagues.map(league => {\n          // Итерируем (перебираем) каждый объект `league` из массива `leagues`.\n          // Для каждого объекта `league` будет создан элемент списка `<li>`.\n\n          const isActive = selectedLeague === league.code || !selectedLeague && league.code === null;\n          // Логика для определения, является ли текущая лига АКТИВНОЙ (выбранной).\n          // `isActive` будет `true`, если:\n          // 1. `selectedLeague` (из родителя) совпадает с `league.code` текущей лиги.\n          // ИЛИ\n          // 2. `selectedLeague` равен `null` (т.е. выбрана опция \"ВСЕ\") И `league.code` текущей лиги также равен `null` (это кнопка \"ВСЕ\").\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onSelectLeague(league.code)\n              // Обработчик клика: при нажатии на кнопку вызывается функция `onSelectLeague`\n              // из родительского компонента, передавая ей код текущей лиги.\n              // Убираем общий фон и hover с кнопки, акцент только на квадрате и тексте\n              ,\n              className: `\n                  w-full flex flex-col items-center justify-center p-2 rounded-md\n                  transition-colors duration-150 ease-in-out group\n                  focus:outline-none\n                `\n              // Классы Tailwind CSS для самой кнопки:\n              // `w-full`: занимает всю доступную ширину.\n              // `flex flex-col items-center justify-center`: элементы внутри кнопки (квадрат с лого/текстом и подпись)\n              //   будут располагаться вертикально и центрироваться.\n              // `p-2`: внутренний отступ.\n              // `rounded-md`: скругленные углы.\n              // `transition-colors duration-150 ease-in-out`: плавная анимация при изменении цвета.\n              // `group`: это специальный класс Tailwind, который позволяет применять стили к дочерним элементам\n              //   при наведении на родителя с использованием префикса `group-hover:`.\n              // `focus:outline-none`: убирает стандартную рамку фокуса браузера.\n              ,\n              title: league.name\n              // Атрибут `title` добавляет всплывающую подсказку при наведении мышкой.\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `\n                    w-14 h-14 sm:w-16 sm:h-16 mb-1 rounded-md\n                    flex items-center justify-center overflow-hidden\n                    transition-all duration-150 ease-in-out\n                    border-2\n                    ${isActive ? \"bg-color-primary-red border-color-primary-red shadow-league-active-glow\" :\n                // Если лига активна: красный фон, красная рамка, красное свечение.\n                \"bg-gray-700 border-gray-700 group-hover:border-color-primary-red\"\n                // Если неактивна: серый фон, серая рамка. При наведении на родительскую кнопку (`group-hover`),\n                // рамка становится красной.\n                }\n                  `,\n                children: league.logo ?\n                /*#__PURE__*/\n                // Если у лиги есть `logo` (URL изображения), то отображаем его.\n                _jsxDEV(\"img\", {\n                  src: league.logo // Путь к изображению логотипа.\n                  ,\n                  alt: `${league.name} logo` // Альтернативный текст для доступности.\n                  ,\n                  className: \"w-full h-full object-contain p-1.5\"\n                  // Размеры, масштабирование (чтобы логотип полностью помещался), внутренний отступ.\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this) :\n                /*#__PURE__*/\n                // Иначе (если `logo` нет, значит это кнопка \"ВСЕ\" или лига без лого), отображаем текст.\n                // Блок для кнопки \"ВСЕ\"\n                _jsxDEV(\"span\", {\n                  className: `text-lg sm:text-xl font-bold\n                      ${\n                  // Текст \"ALL\": желтый на красном фоне (активный), светло-серый на сером, желтый при наведении\n                  isActive ? \"text-color-primary-yellow\" // Если активна, текст желтый (на красном фоне квадрата).\n                  : \"text-color-primary-yellow\" // Если неактивна, текст также желтый (на сером фоне квадрата).\n                  // Здесь можно было бы сделать разные цвета для активного/неактивного состояния текста, если нужно.\n                  }`,\n                  children: league.code === null ? \"ALL\" // Если код лиги `null`, показываем \"ALL\".\n                  : league.shortName || league.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-xs text-center truncate w-full mt-1 px-1 transition-colors\n                    ${isActive ? \"text-color-primary-red font-semibold\" :\n                // Если активна: красный текст, жирный шрифт.\n                \"text-color-primary-yellow group-hover:text-color-yellow-bright\"\n                // Если неактивна: желтый текст. При наведении на родительскую кнопку (`group-hover`),\n                // текст становится ярко-желтым.\n                }`,\n                children: league.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, league.code || \"all-leagues\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = LeagueSidebar;\nexport default LeagueSidebar;\n// Экспортируем компонент `LeagueSidebar` по умолчанию, чтобы его можно было импортировать\n// и использовать в `HomePage.js`.\nvar _c;\n$RefreshReg$(_c, \"LeagueSidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LeagueSidebar","leagues","selectedLeague","onSelectLeague","className","children","map","league","isActive","code","onClick","title","name","logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","shortName","_c","$RefreshReg$"],"sources":["D:/git/CourseWork/frontend/src/components/Layout/LeagueSidebar.js"],"sourcesContent":["// frontend/src/components/Layout/LeagueSidebar.js\r\n\r\nimport React from \"react\";\r\n// Импортируем библиотеку React, необходимую для создания функциональных компонентов.\r\n\r\nfunction LeagueSidebar({ leagues, selectedLeague, onSelectLeague }) {\r\n  // Определяем функциональный React-компонент `LeagueSidebar`.\r\n  // Он принимает три \"пропса\" (свойства) от родительского компонента (например, `HomePage.js`):\r\n  // - `leagues`: Массив объектов лиг, которые нужно отобразить в сайдбаре (включая \"ВСЕ\").\r\n  // - `selectedLeague`: Код текущей выбранной лиги (или `null` для \"ВСЕ\").\r\n  // - `onSelectLeague`: Функция-колбэк, которая будет вызвана при выборе лиги в сайдбаре,\r\n  //   чтобы обновить состояние выбранной лиги в родительском компоненте.\r\n\r\n  return (\r\n    // Вся JSX-разметка, которая будет отрисована этим компонентом.\r\n    <div className=\"bg-color-surface p-2 sm:p-3 rounded-lg shadow-md\">\r\n      {/* Это внешний контейнер сайдбара.\r\n          `bg-color-surface`: фоновый цвет из твоей палитры Tailwind (чуть темнее основного фона).\r\n          `p-2 sm:p-3`: внутренний отступ, который немного увеличивается на средних экранах.\r\n          `rounded-lg`: скругленные углы.\r\n          `shadow-md`: добавляет тень, придавая глубину. */}\r\n\r\n      <ul className=\"space-y-1.5 sm:space-y-2\">\r\n        {/* Список `<ul>` для элементов лиг.\r\n            `space-y-1.5 sm:space-y-2`: добавляет вертикальный отступ между элементами списка. */}\r\n\r\n        {leagues.map((league) => {\r\n          // Итерируем (перебираем) каждый объект `league` из массива `leagues`.\r\n          // Для каждого объекта `league` будет создан элемент списка `<li>`.\r\n\r\n          const isActive =\r\n            selectedLeague === league.code ||\r\n            (!selectedLeague && league.code === null);\r\n          // Логика для определения, является ли текущая лига АКТИВНОЙ (выбранной).\r\n          // `isActive` будет `true`, если:\r\n          // 1. `selectedLeague` (из родителя) совпадает с `league.code` текущей лиги.\r\n          // ИЛИ\r\n          // 2. `selectedLeague` равен `null` (т.е. выбрана опция \"ВСЕ\") И `league.code` текущей лиги также равен `null` (это кнопка \"ВСЕ\").\r\n\r\n          return (\r\n            <li key={league.code || \"all-leagues\"}>\r\n              {/* Элемент списка `<li>` для каждой лиги.\r\n                  `key={league.code || \"all-leagues\"}`: Уникальный ключ для React.\r\n                  Это важно для оптимизации рендеринга списков.\r\n                  Если `league.code` равен `null` (для кнопки \"ВСЕ\"), используется строка \"all-leagues\". */}\r\n\r\n              <button\r\n                onClick={() => onSelectLeague(league.code)}\r\n                // Обработчик клика: при нажатии на кнопку вызывается функция `onSelectLeague`\r\n                // из родительского компонента, передавая ей код текущей лиги.\r\n                // Убираем общий фон и hover с кнопки, акцент только на квадрате и тексте\r\n                className={`\r\n                  w-full flex flex-col items-center justify-center p-2 rounded-md\r\n                  transition-colors duration-150 ease-in-out group\r\n                  focus:outline-none\r\n                `}\r\n                // Классы Tailwind CSS для самой кнопки:\r\n                // `w-full`: занимает всю доступную ширину.\r\n                // `flex flex-col items-center justify-center`: элементы внутри кнопки (квадрат с лого/текстом и подпись)\r\n                //   будут располагаться вертикально и центрироваться.\r\n                // `p-2`: внутренний отступ.\r\n                // `rounded-md`: скругленные углы.\r\n                // `transition-colors duration-150 ease-in-out`: плавная анимация при изменении цвета.\r\n                // `group`: это специальный класс Tailwind, который позволяет применять стили к дочерним элементам\r\n                //   при наведении на родителя с использованием префикса `group-hover:`.\r\n                // `focus:outline-none`: убирает стандартную рамку фокуса браузера.\r\n                title={league.name}\r\n                // Атрибут `title` добавляет всплывающую подсказку при наведении мышкой.\r\n              >\r\n                {/* Квадрат для логотипа или текста \"ALL\" */}\r\n                <div\r\n                  className={`\r\n                    w-14 h-14 sm:w-16 sm:h-16 mb-1 rounded-md\r\n                    flex items-center justify-center overflow-hidden\r\n                    transition-all duration-150 ease-in-out\r\n                    border-2\r\n                    ${\r\n                      isActive\r\n                        ? \"bg-color-primary-red border-color-primary-red shadow-league-active-glow\"\r\n                        : // Если лига активна: красный фон, красная рамка, красное свечение.\r\n                          \"bg-gray-700 border-gray-700 group-hover:border-color-primary-red\"\r\n                      // Если неактивна: серый фон, серая рамка. При наведении на родительскую кнопку (`group-hover`),\r\n                      // рамка становится красной.\r\n                    }\r\n                  `}\r\n                >\r\n                  {league.logo ? (\r\n                    // Если у лиги есть `logo` (URL изображения), то отображаем его.\r\n                    <img\r\n                      src={league.logo} // Путь к изображению логотипа.\r\n                      alt={`${league.name} logo`} // Альтернативный текст для доступности.\r\n                      className=\"w-full h-full object-contain p-1.5\"\r\n                      // Размеры, масштабирование (чтобы логотип полностью помещался), внутренний отступ.\r\n                    />\r\n                  ) : (\r\n                    // Иначе (если `logo` нет, значит это кнопка \"ВСЕ\" или лига без лого), отображаем текст.\r\n                    // Блок для кнопки \"ВСЕ\"\r\n                    <span\r\n                      className={`text-lg sm:text-xl font-bold\r\n                      ${\r\n                        // Текст \"ALL\": желтый на красном фоне (активный), светло-серый на сером, желтый при наведении\r\n                        isActive\r\n                          ? \"text-color-primary-yellow\" // Если активна, текст желтый (на красном фоне квадрата).\r\n                          : \"text-color-primary-yellow\" // Если неактивна, текст также желтый (на сером фоне квадрата).\r\n                        // Здесь можно было бы сделать разные цвета для активного/неактивного состояния текста, если нужно.\r\n                      }`}\r\n                    >\r\n                      {/* Отображаем \"ALL\" для кнопки \"ВСЕ\" */}\r\n                      {league.code === null\r\n                        ? \"ALL\" // Если код лиги `null`, показываем \"ALL\".\r\n                        : league.shortName || league.code}\r\n                      {/* Иначе, показываем короткое имя лиги, или ее код, если короткое имя не указано. */}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {/* Подпись под квадратиком */}\r\n                <span\r\n                  className={`text-xs text-center truncate w-full mt-1 px-1 transition-colors\r\n                    ${\r\n                      isActive\r\n                        ? \"text-color-primary-red font-semibold\"\r\n                        : // Если активна: красный текст, жирный шрифт.\r\n                          \"text-color-primary-yellow group-hover:text-color-yellow-bright\"\r\n                      // Если неактивна: желтый текст. При наведении на родительскую кнопку (`group-hover`),\r\n                      // текст становится ярко-желтым.\r\n                    }`}\r\n                >\r\n                  {league.name}\r\n                  {/* Полное название лиги. `truncate w-full` обрезает длинный текст. */}\r\n                </span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeagueSidebar;\r\n// Экспортируем компонент `LeagueSidebar` по умолчанию, чтобы его можно было импортировать\r\n// и использовать в `HomePage.js`.\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}